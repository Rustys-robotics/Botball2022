#include <kipr/botball.h>
int initial_position = 0;
int final_position = 1700;
int x = 0;

float getStopTime (int pom_position)
{
    switch ( pom_position) 
    {
        case 1: return 1000;
        case 2: 
        case 4:
        case 5:
            return 3000;
        case 3: return 7000;
        default:
            return 0;
    }
}

int getStopCounter (int pom_position)
{
    switch ( pom_position) 
    {
        case 1: return 10000;
        case 2: 
        case 4:
        case 5:
            return 30000;
        case 3: return 70000;
        default:
            return 0;
    }
}



int move_wallaby( int pom_position, float start_time)
{
    float stopTime = getStopTime(pom_position);
    float stopCounter = getStopCounter(pom_position);
    
    float curTime = 0;
    int curCounter =0;

    while (digital (0) == 0 )
    {
        if (analog (0) > 1600)
        {
            motor(0,-10);
            motor(2, 90);
        }
        else
        {
            motor(0, 90);
            motor(2,-10);
        }

        // ao();

        /*curTime = seconds();
        printf("Current time in move wallaby %f \n", curTime);
        if (curTime > (start_time + stopTime) ) 
        {
            printf("i am out of while loop \n");
            break;
        }
        */
        
        curCounter = get_motor_position_counter(0);
        printf("Current counter in move wallaby %f \n", curCounter);
        if (curTimecurCounter > (start_time + stopTime) ) 
        {
            printf("i am out of while loop \n");
            break;
        }
             

        
    }

    ao();
    set_servo_position(2,initial_position);
    msleep(1000);

    enable_servo(0);
    set_servo_position(0,1029);
    msleep(1000);
    while(get_servo_position(2)<final_position)
    {
        set_servo_position(2,x);
        msleep(7);
        x = x +2;
    }
    msleep(100);
    printf("This servo moves at 200 ticks/second\n");  

    enable_servo(0);
    set_servo_position(0,1029);
    msleep(800);

    enable_servo(2);
    set_servo_position(2,1340);
    msleep(800);

    ao();

    enable_servo(0);
    set_servo_position(0,750);
    msleep(2000);

    set_servo_position(0,0);
    msleep(2000);
    return 1;
}

int main()
{
    printf("Hello World\n");
    //wait_for_light(1);

    enable_servo(0);
    set_servo_position(0,0);
    msleep(800);

    enable_servos();

    set_servo_position(2,initial_position);
    msleep(1000);

    set_servo_position(2,initial_position);
    msleep(1000);

    enable_servo(0);
    set_servo_position(0,1029);
    msleep(1000);
    while(get_servo_position(2)<final_position)
    {
        set_servo_position(2,x);
        msleep(7);
        x = x +2;
    }
    msleep(100);
    printf("This servo moves at 200 ticks/second\n");

    enable_servo(0);
    set_servo_position(0,1029);
    msleep(800);

    enable_servo(2);
    set_servo_position(2,1340);
    msleep(800);

    ao();

    enable_servo(0);
    set_servo_position(0,750);
    msleep(2000);

    set_servo_position(0,0);
    msleep(2000);

    mav(0,1500);//forward
    mav(2,1500);
    msleep(1500);

    mav(0,0);//90 degree turn
    mav(2,500);
    msleep(5700);

    mav(0,-700);//back up
    mav(2,-700);
    msleep(1000); 

    ao();

    float curTime = seconds();

    int doneCollection = 0;

    int pos=1;

    printf("Current start time is %f \n", curTime);

    while (pos < 6)
    {
        doneCollection = move_wallaby(pos, curTime);
        pos++;
        curTime = seconds();
        printf("i am in second move pos %f \n", curTime);

    }


    return 0;
}


